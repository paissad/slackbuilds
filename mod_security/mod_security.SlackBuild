#!/bin/bash

# Copyright 2010, Papa Issa DIAKHATE (paissad), Montpellier, FRANCE. 
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Requirements:
# Suggests:

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}
DATE=$(LC_ALL=C date +%d-%b-%Y)

PRGNAM=${PRGNAM:-mod_security}
SRCNAM=${SRCNAM:-modsecurity-apache}
VERSION=${VERSION:-2.5.12}
ARCH=${ARCH:-$(uname -m)}
BUILD=${BUILD:-1}
CWD=${CWD:-`pwd`}
TMP=${TMP:-/tmp/SBp}
PKG=${PKG:-$TMP/package-$PRGNAM}
OUTPUT=${OUTPUT:-/tmp}
EXT=${EXT:-tar.gz}
URL=${URL:-http://sourceforge.net/projects/mod-security/files/$SRCNAM/$VERSION/${SRCNAM}_${VERSION}.$EXT/download}
TAG=${TAG:-_paissad}
PKGTYPE=${PKGTYPE:-tgz}
PREFIX=${PREFIX:-"/usr"}
NUMJOBS=${NUMJOBS:-}
DOCS=${DOCS:-"CREDITS WHISHLIST ABOUT-NLS AUTHORS COPYING LICENSE \
CHANGELOG ChangeLog HACKING INSTALL MAINTAINERS NEWS ReadMe README \
THANKS TODO RELEASE UPGRADING FAQ HELP"}

set -e

txtred=$'\e[0;31m' # Red
txtgrn=$'\e[0;32m' # Green
txtylw=$'\e[0;33m' # Yellow
txtblu=$'\e[0;34m' # Blue
txtpur=$'\e[0;35m' # Purple
txtcyn=$'\e[0;36m' # Cyan
txtrst=$'\e[0m'    # Text Reset

frame()
{
    WIDTH=78
    STARS="++----------------------------------------------------------------------------+"
    SPACES="                                                                               "
    printf "%s\n" "${STARS:1:$WIDTH}"
    while read line ; do
        HALF="${SPACES:1:$((($WIDTH-${#line})/2))}"
        LINE="$HALF$line$SPACES"
        printf "+%s+\n" "${LINE:1:$(($WIDTH-2))}"
    done
    printf "%s\n" "${STARS:1:$WIDTH}"
}
introduce(){
    echo -e "$txtgrn"; printf "$1\n" | frame; echo -e "$txtrst \c "; sleep 2;
}
conclude(){
    echo -e "${txtgrn}\n# $1 \n${txtrst}"; sleep 2;
}
shellout(){
    echo -e "${txtred}Error:${txtrst} $1 ${txtcyn}(exit status -> $?)${txtrst}"; exit 1;
}
warnout(){
    echo -e "${txtylw}Warning:${txtrst} $1"; sleep 3;
}
if [ ! -r ${SRCNAM}_$VERSION.$EXT ]; then
    introduce "Start downloading ${SRCNAM}_$VERSION.$EXT" 
    wget "$URL" || shellout "Downloading ${SRCNAM}_$VERSION.$EXT"
    conclude "Download of ${SRCNAM}_$VERSION.$EXT finished successfully !"
fi

rm -rf $PKG 
mkdir -p $TMP $PKG $OUTPUT
cd $TMP || exit 1
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/${SRCNAM}_${VERSION}.$EXT \
|| shellout "Extracting ${SRCNAM}_${VERSION}.$EXT"

introduce "Start SlackBuild $PRGNAM-$VERSION"
test -d $PRGNAM-$VERSION || \
mv -v ${SRCNAM}_${VERSION} $PRGNAM-$VERSION

if [ "$ARCH" = "i486" ]; then
  SLACKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLACKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLACKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  NUMJOBS=${NUMJOBS:-2}
fi

cd $TMP/$PRGNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

cd apache2 || shellout "cd to apache2 dir"
CFLAGS="$SLACKCFLAGS" \
CXXFLAGS="$SLACKCFLAGS" \
./configure \
--prefix=$PREFIX \
--libdir=$PREFIX/lib${LIBDIRSUFFIX} \
--sysconfdir=/etc \
--localstatedir=/var \
--mandir=$PREFIX/man \
--docdir=$PREFIX/doc/$PRGNAM-$VERSION \
--build=$ARCH-slackware-linux \
|| shellout "configure of $PRGNAM-$VERSION failed"
conclude "configure finished ..."

introduce "make & make mlogc"
make -j${NUMJOBS} || shellout "make failed." 
make mlogc || shellout "make mlogc failed"
conclude "make & make mlogc finished successfully ..."

# Create target dir
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/httpd/modules

install -m 0755 $TMP/$PRGNAM-$VERSION/apache2/.libs/mod_security2.so \
${PKG}/usr/lib${LIBDIRSUFFIX}/httpd/modules/mod_security2.so \
|| shellout "Copying mod_security2.so failed"

mkdir -p ${PKG}/usr/bin
install -p $TMP/$PRGNAM-$VERSION/tools/{mlogc,mlogc-batch-load.pl,rules-updater.pl} \
${PKG}/usr/bin/ \
|| shellout "Copying tools failed." 

mkdir -p ${PKG}/etc
install -m 0644 $TMP/$PRGNAM-$VERSION/apache2/mlogc-src/mlogc-default.conf \
${PKG}/etc/mlogc.conf.new || shellout "Copying mlogc.conf.new failed"

install -m 0644 $TMP/$PRGNAM-$VERSION/tools/rules-updater-example.conf \
${PKG}/etc/rules-updater-example.conf.new 
cp -a $PKG/etc/{rules-updater-example.conf.new,rules-updater.conf.new}
   
mkdir -p ${PKG}/etc/httpd/modsecurity.d
install -m 0644 $TMP/$PRGNAM-$VERSION/rules/*.conf \
${PKG}/etc/httpd/modsecurity.d/ \
|| shellout "Copying rules files failed"

mkdir -p $PKG/etc/httpd/modsecurity.d/
cp -a $TMP/$PRGNAM-$VERSION/rules/base_rules ${PKG}/etc/httpd/modsecurity.d/ \
|| shellout "Copying base_rules files"
cp -a $TMP/$PRGNAM-$VERSION/rules/optional_rules ${PKG}/etc/httpd/modsecurity.d/ \
|| shellout "Copying optional_rules files"
   
cat > ${PKG}/etc/httpd/modsecurity.d/modsecurity_localrules.conf.new <<'EOF'
# Drop your local rules in here.
EOF
 
for conf in $(find ${PKG}/etc/httpd/modsecurity.d/ -type f -name *.conf) ;do
    mv ${conf} ${conf}.new
done

mkdir -p ${PKG}/etc/httpd/extra
cat > ${PKG}/etc/httpd/extra/mod_security.conf.new <<'EOF'
# Example configuration file for the mod_security Apache module

LoadModule security2_module modules/mod_security2.so
LoadModule unique_id_module modules/mod_unique_id.so

<IfModule mod_security2.c>
# This is the ModSecurity Core Rules Set.

# Basic configuration goes in here
Include modsecurity.d/*.conf
Include modsecurity.d/base_rules/*.conf
Include modsecurity.d/modsecurity_localrules.conf
</IfModule>
EOF

( cd $PKG || exit 1
  find . -type f | xargs file | grep -e "executable" -e "shared object" | \
    grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded  2> /dev/null
)

# Installation of slack-desc
mkdir -p $PKG/install 
( test -r $CWD/slack-desc && \
cat $CWD/slack-desc > $PKG/install/slack-desc ) || \
cat << EODESC > $PKG/install/slack-desc
# HOW TO EDIT THIS FILE:            
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|' 
# on the right side marks the last column you can put a character in.  You
# must
# make exactly 11 lines for the formatting to be correct.  It's also           
# customary to leave one space after the ':'.                                  

         |-----handy-ruler----------------------------------------------------|
mod_security:  
mod_security: mod_security (Security module for the Apache HTTP Server)
mod_security:
mod_security: ModSecurity is an open source intrusion detection and prevention
mod_security: engine for web applications. It operates embedded into the web
mod_security: server acting as a powerful umbrella - shielding web applications
mod_security: from attacks.
mod_security:
mod_security: http://www.modsecurity.org/
mod_security:
mod_security: Packager: _PACKAGER on _BUILD_DATE
EODESC

# Install a doinst.sh, if it exists
if [ -r $CWD/doinst.sh ]; then
   cat $CWD/doinst.sh > $PKG/install/doinst.sh
fi
#find $PKG/etc/ -type f -name *.new \
#-exec echo "config {} >> $PKG/install/doinst.sh" \;
#find $PKG/etc/httpd/modsecurity.d/ -type f -name *.new \
#-exec echo "config {} >> $PKG/install/doinst.sh" \;

# Install the documentation
cd $TMP/$PRGNAM-$VERSION
mkdir -p $PKG/$PREFIX/doc/$PRGNAM-$VERSION
for i in $DOCS;
do 
  if [ -r $i ]; then
    install -m 0644 $i $PKG/$PREFIX/doc/$PRGNAM-$VERSION
  fi
done

mkdir -p $PKG/$PREFIX/doc/$PRGNAM-$VERSION/rules
for i in  $TMP/$PRGNAM-$VERSION/rules/{README,LICENSE,CHANGELOG}; do
        install -m 0664 $i $PKG/$PREFIX/doc/$PRGNAM-$VERSION/rules
done

mkdir -p  $PKG/$PREFIX/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/$PREFIX/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION
find $PKG/$PREFIX/doc -type f -exec chmod -c 0644 {} \;

mkdir -p $PKG/install
test -r $CWD/slack-desc && \
cat $CWD/slack-desc > $PKG/install/slack-desc
# -- finished install docs --

set +e
# We change the default values in the slack-desc 
sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
${PKG}/install/slack-desc
set -e

cd $PKG 
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE \
|| shellout "/sbin/makepkg for $PRGNAM-$VERSION failed"

conclude "Done ..."
