#!/bin/bash

# Copyright 2010, Papa Issa DIAKHATE (paissad), Montpellier, FRANCE. 
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Requirements:
# Suggests:

time_start_script=$(date +%s)

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$(cat /etc/HOSTNAME)}
DATE=$(LC_ALL=C date +%d-%b-%Y)

PRGNAM=${PRGNAM:-MPlayer}
SRCNAM=${SRCNAM:-$PRGNAM}
SVN_URL=${SVN_URL:-svn://svn.mplayerhq.hu/mplayer/trunk}
SVN_REVISION=${SVN_REVISION:-"$(svn log -qr HEAD $SVN_URL | sed -n 's/^r\([0-9]\{1,\}\).*/\1/p')"}
VERSION=${VERSION:-r$SVN_REVISION}
ARCH=${ARCH:-$(uname -m)}
BUILD=${BUILD:-1}
CWD=${CWD:-`pwd`}
TMP=${TMP:-/tmp/SBp}
PKG=${PKG:-$TMP/package-$PRGNAM}
OUTPUT=${OUTPUT:-/tmp}
EXT=${EXT:-tar.bz2}
SOURCE=${SRCNAM}-${VERSION}.$EXT
TAG=${TAG:-_paissad}
PKGTYPE=${PKGTYPE:-tgz}
PREFIX=${PREFIX:-"/usr"}
NUMJOBS=${NUMJOBS:-}
DOCS=${DOCS:-"CREDITS WHISHLIST ABOUT-NLS AUTHORS COPYING LICENSE* \
CHANGES CHANGELOG* ChangeLog* HACKING INSTALL* MAINTAINERS NEWS \
ReadMe* README* THANKS TODO Todo RELEASE* UPGRADING* FAQ Faq HELP* BUGS*"}

set -e

txtred=$'\e[0;31m' # Red
txtgrn=$'\e[0;32m' # Green
txtylw=$'\e[0;33m' # Yellow
txtblu=$'\e[0;34m' # Blue
txtpur=$'\e[0;35m' # Purple
txtcyn=$'\e[0;36m' # Cyan
txtrst=$'\e[0m'    # Text Reset

frame()
{
    WIDTH=78
    STARS="++----------------------------------------------------------------------------+"
    SPACES="                                                                               "
    printf "%s\n" "${STARS:1:$WIDTH}"
    while read line ; do
        HALF="${SPACES:1:$((($WIDTH-${#line})/2))}"
        LINE="$HALF$line$SPACES"
        printf "+%s+\n" "${LINE:1:$(($WIDTH-2))}"
    done
    printf "%s\n" "${STARS:1:$WIDTH}"
}
introduce(){
    echo -e "$txtgrn"; printf "$1\n" | frame; echo -e "$txtrst \c "; sleep 2;
}
conclude(){
    echo -e "${txtgrn}\n# $1 \n${txtrst}"; sleep 2;
}
shellout(){
    echo -e "${txtred}Error:${txtrst} $1 ${txtcyn}(exit status -> $?)${txtrst}"; exit 1;
}
warnout(){
    echo -e "${txtylw}Warning:${txtrst} $1"; sleep 3;
}

# Determine the tarball extension:
case "$EXT" in
    "tar.xz") TARCOMP="J" ;;
    "tar.gz") TARCOMP="z" ;;
    "tgz") TARCOMP="z" ;;
    "tar.bz2") TARCOMP="j" ;;
    *) echo "Archive can only have extension 'tar.xz', '.tar.gz' '.tar.bz2' or '.tgz'" ; 
    exit 1 ;;
esac

# Download of the source !
if [ ! -r $SOURCE ]; then
    introduce "Start downloading ${SRCNAM} at revision $SVN_REVISION" 
    svn export -r $SVN_REVISION $SVN_URL $PRGNAM-$VERSION  \
  || shellout "Downloading ${SRCNAM}"
    conclude "Download of ${SRCNAM} at revision $SVN_REVISION finished successfully !"

  introduce "Compressing source ..."
    tar -${TARCOMP}cvf $SOURCE $PRGNAM-$VERSION \
    || shellout "Compressing source failed."
    conclude "Compressing source finished successfully."
    conclude "The file is $SOURCE" 
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP || exit 1
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$SOURCE \
|| shellout "Extracting $SOURCE"

introduce "Start SlackBuild $PRGNAM-$VERSION"
test -d $PRGNAM-$VERSION || \
mv -v ${SRCNAM}-${VERSION} $PRGNAM-$VERSION
cd $TMP/$PRGNAM-$VERSION

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-D_GNU_SOURCE -O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-D_GNU_SOURCE -O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-D_GNU_SOURCE -O2 -fPIC"
  LIBDIRSUFFIX="64"
  NUMJOBS=2

  sed -i".bak" \
  -e 's,_xmmslibdir=$(xmms-config --exec-prefix)/lib,&64,' \
  -e 's,\(_xmmsplugindir=/usr/lib\)\(/xmms/Input\),\164\2,' \
  -e 's,_xmmslibdir=/usr/lib,&64,' \
  $TMP/$PRGNAM-$VERSION/configure
fi

# Available languages: all bg cs de dk el en es fr hu it ja
# ko mk nb nl pl ro ru sk sv tr uk pt_BR zh_CN zh_TW
LANGUAGES="en fr"  # The default is to just add "en" documentation
CODECSDIR=/usr/lib${LIBDIRSUFFIX}/codecs   # Where the WIN32 codecs are expected for instance

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

introduce "Running configure"
#CFLAGS="$SLKCFLAGS" \
#CFLAGS="$SLACKCFLAGS -I/usr/lib64/live" \
#CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=$PREFIX \
  --libdir=$PREFIX/lib${LIBDIRSUFFIX} \
  --confdir=/etc/mplayer \
  --mandir=$PREFIX/man \
  --enable-radio \
  --enable-radio-capture \
  --enable-smb \
  --enable-menu \
  --enable-gif \
  --enable-png \
  --enable-mng \
  --enable-jpeg \
  --enable-liblzo \
  --enable-libcdio \
  --enable-theora \
  --enable-faad \
  --enable-xmms \
  --enable-gl \
  --enable-dga2 \
  --enable-dga1 \
  --enable-sdl \
  --enable-caca \
  --enable-v4l2 \
  --enable-dvb \
  --enable-vdpau \
  --enable-vm \
  --enable-xinerama \
  --enable-x11 \
  --enable-xshape \
  --enable-fbdev \
  --enable-tdfxfb \
  --enable-s3fb \
  --enable-zr \
  --enable-bl \
  --enable-tdfxvid \
  --enable-largefiles \
  --disable-arts \
  --codecsdir=${CODECSDIR} \
  --language="${LANGUAGES}" \
  --language-doc="${LANGUAGES}" \
  --language-man="${LANGUAGES}" \
  --language-msg="${LANGUAGES}" \
  --enable-runtime-cpudetection \
|| shellout "configure of $PRGNAM-$VERSION failed"
conclude "./configure finished successfully"

introduce "Running make"
make -j${NUMJOBS} || shellout "make failed." 
introduce "Running make install"
make DESTDIR=$PKG install || shellout "make install failed"

# Let's install the config files.
mkdir -p $PKG/etc/mplayer
cd $TMP/$PRGNAM-$VERSION/etc
cp example.conf $PKG/etc/mplayer/mplayer.conf.new
for i in codecs.conf dvb-menu.conf input.conf menu.conf;
do
    install -m 0644 $i $PKG/etc/mplayer/$i.new
done

# Let's install the .desktop file
install -D -m 0644 mplayer.desktop $PKG/usr/share/applications

# Let's install the icon.
install -D -m 0644 mplayer.xpm $PKG/usr/share/pixmaps

# strip binaries
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
| cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Installation of slack-desc
mkdir -p $PKG/install 
( test -r $CWD/slack-desc && \
cat $CWD/slack-desc > $PKG/install/slack-desc ) || \
cat << EODESC > $PKG/install/slack-desc
# HOW TO EDIT THIS FILE:            
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|' 
# on the right side marks the last column you can put a character in.  You
# must
# make exactly 11 lines for the formatting to be correct.  It's also           
# customary to leave one space after the ':'.                                  

       |-----handy-ruler----------------------------------------------------|
MPlayer:    mplayer       ( movie player for Unix-like systems ) 
MPlayer:
MPlayer: MPlayer plays most MPEG, VOB, AVI, Ogg/OGM, VIVO, ASF/WMA/WMV,
MPlayer: QT/MOV/MP4, FLI, RM, NuppelVideo, yuv4mpeg, FILM, RoQ, PVA files,
MPlayer: supported by many native, XAnim, RealPlayer, and Win32 DLL codecs.
MPlayer: It can also play VideoCD,SVCD,DVD,3ivx, RealMedia, and DivX movies.
MPlayer: 
MPlayer: Homepage: www.mplayerhq.hu
MPlayer: 
MPlayer: Packager: _PACKAGER on _BUILD_DATE
MPlayer:
EODESC

# Install a doinst.sh, if it exists
if [ -r $CWD/doinst.sh ]; then
   cat $CWD/doinst.sh > $PKG/install/doinst.sh
fi

# Let's add the .new conf files in the doinst.sh script.
cd $PKG
for conf_new in $(find etc/mplayer/ -type f -name *.new )
do
cat <<EOINS >> $PKG/install/doinst.sh
config $conf_new
EOINS
done


## Install the manpages
if [ -d $PKG/usr/man ]; then
    cd $PKG/usr/man ;
    find . -type f -exec gzip -9 {} \;
    for i in $( find . -type l ) ;do
        ln -s $( readlink $i ).gz $i.gz ; rm $i;
    done
fi

# Install the documentation
cd $TMP/$PRGNAM-$VERSION
mkdir -p $PKG/$PREFIX/doc/$PRGNAM-$VERSION
for i in $DOCS ;
do 
  if [ -r $i ]; then
    install -m 644 $i $PKG/$PREFIX/doc/$PRGNAM-$VERSION
  fi
done
for i in "DOCS/xml DOCS/tech";
do
    install -d -m 0644 $i $PKG/$PREFIX/doc/$PRGNAM-$VERSION 
done  

mkdir -p  $PKG/$PREFIX/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/$PREFIX/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION
find $PKG/$PREFIX/doc -type f -exec chmod 0644 {} \;

# We change the default values in the slack-desc 
sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
${PKG}/install/slack-desc || true

cd $PKG 
introduce "Running makepkg ..."
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE \
|| shellout "/sbin/makepkg for $PRGNAM-$VERSION failed"

time_end=$(date +%s)
elapsed_time_script=`expr $time_end - $time_start_script`
#Convert seconds to h:m:s format
_hms(){
  local S=${1}
  ((h=S/3600))
  ((m=S%3600/60))
  ((s=S%60))
  printf "%dh:%dm:%ds\n" $h $m $s
}
conclude "The script has been running during $(_hms $elapsed_time_script)"
conclude "Done ..."

