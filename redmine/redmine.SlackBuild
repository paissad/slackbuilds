#!/bin/bash

# Copyright 2010, Papa Issa DIAKHATE (paissad), Montpellier, FRANCE. 
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Requirements:
# Suggests:

time_start_script=$(date +%s)

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$(cat /etc/HOSTNAME)}
DATE=$(LC_ALL=C date +%d-%b-%Y)

PRGNAM=${PRGNAM:-redmine}
SRCNAM=${SRCNAM:-$PRGNAM}
VERSION=${VERSION:-1.0.4}
ARCH=${ARCH:-noarch}
BUILD=${BUILD:-1}
CWD=${CWD:-`pwd`}
TMP=${TMP:-/tmp/SBp}
PKG=${PKG:-$TMP/package-$PRGNAM}
OUTPUT=${OUTPUT:-/tmp}
EXT=${EXT:-tar.gz}
SOURCE=${SRCNAM}-${VERSION}.$EXT
URL=${URL:-http://rubyforge.org/frs/download.php/73457/$SOURCE}
TAG=${TAG:-_paissad}
PKGTYPE=${PKGTYPE:-tgz}
RAILS_ROOT=${RAILS_ROOT:-/var/www/htdocs}
PREFIX=${PREFIX:-"/usr"}
NUMJOBS=${NUMJOBS:-}
DOCS=${DOCS:-"CREDITS WHISHLIST ABOUT-NLS AUTHORS COPYING LICENSE* \
CHANGES CHANGELOG* ChangeLog* HACKING INSTALL* MAINTAINERS NEWS \
ReadMe* README* THANKS TODO Todo RELEASE* UPGRADING* FAQ Faq HELP* BUGS*"}

set -e
trap shellout EXIT

# Colors#{{{
txtred=$'\e[0;31m' # Red
txtgrn=$'\e[0;32m' # Green
txtylw=$'\e[0;33m' # Yellow
txtblu=$'\e[0;34m' # Blue
txtpur=$'\e[0;35m' # Purple
txtcyn=$'\e[0;36m' # Cyan
txtrst=$'\e[0m'    # Text Reset
##}}}

# Fancy functions#{{{
frame()
{
    WIDTH=78
    STARS="+";for ((i=1; i<=$(($WIDTH-2)); i++));do STARS+="-";done; STARS+="+"
    SPACES="";for ((i=1; i<$WIDTH; i++)); do SPACES+=" "; done
    printf "%s\n" "${STARS:0:$WIDTH}"
    while read line ; do
        HALF="${SPACES:1:$((($WIDTH-${#line})/2))}"
        LINE="$HALF$line$SPACES"
        printf "+%s+\n" "${LINE:1:$(($WIDTH-2))}"
    done
    printf "%s\n" "${STARS:0:$WIDTH}"
}
introduce(){
    echo -e "$txtgrn"; printf "$1\n" | frame; echo -e "$txtrst\c"; sleep 2;
}
conclude(){
    echo -e "${txtgrn}\n# $1 \n${txtrst}"; sleep 2;
}
shellout(){
	ret=$?
    if (($ret)); then
        echo -e "${txtred}Error:${txtrst} $process failed ! ${txtcyn}"
		echo -e "(exit status of last command -> $ret)${txtrst}"
	   	exit 1;
    fi
}
##}}}

# Download of the source !#{{{
if [[ ! -r "$SOURCE" ]]; then
    introduce "Start downloading $SOURCE" 
    wget "$URL"
    conclude "Download of $SOURCE finished successfully !"
fi
##}}}

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP || exit 1
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$SOURCE

introduce "Start SlackBuild $PRGNAM-$VERSION"
test -d $PRGNAM-$VERSION || \
mv -v ${SRCNAM}-${VERSION} $PRGNAM-$VERSION
cd $TMP/$PRGNAM-$VERSION

# Bail if user or group isn't valid on your system
if ! grep ^redmine: /etc/passwd 2>&1 > /dev/null; then
    cat << EOF
    You must have a redmine user to run this script

    # groupadd -g 303 redmine
    # useradd -u 303 -d /dev/null -s /bin/false -g redmine redmine

EOF
    exit
fi

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

mkdir -p $PKG/$RAILS_ROOT/
cp -a $TMP/$PRGNAM-$VERSION/ $PKG/$RAILS_ROOT/$PRGNAM

mv $PKG/$RAILS_ROOT/$PRGNAM/config/database.yml.example $PKG/$RAILS_ROOT/$PRGNAM/config/database.yml.new
mv $PKG/$RAILS_ROOT/$PRGNAM/config/email.yml.example $PKG/$RAILS_ROOT/$PRGNAM/config/email.yml.new

mkdir -p $PKG/$RAILS_ROOT/$PRGNAM/public/plugin_assets
chown -R redmine:redmine $PKG/$RAILS_ROOT/$PRGNAM/{files,public/plugin_assets,log,tmp}
chmod -R 755 $PKG/$RAILS_ROOT/$PRGNAM/{files,public/plugin_assets,log,tmp}

#chmod 0600 $PKG/$RAILS_ROOT/$PRGNAM/config{database.yml.new,email.yml.new} 

# Installation of slack-desc#{{{
mkdir -p $PKG/install 
( test -r $CWD/slack-desc && \
cat $CWD/slack-desc > $PKG/install/slack-desc ) || \
cat << EODESC > $PKG/install/slack-desc
# HOW TO EDIT THIS FILE:            
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|' 
# on the right side marks the last column you can put a character in.  You
# must
# make exactly 11 lines for the formatting to be correct.  It's also           
# customary to leave one space after the ':'.                                  

       |-----handy-ruler----------------------------------------------------|
redmine:                                 ( redmine ) 
redmine:
redmine: Redmine is a flexible project management web application.
redmine: Written using Ruby on Rails framework, it is cross-platform and
redmine: cross-database.
redmine: 
redmine: 
redmine: Homepage: http://www.redmine.org
redmine: 
redmine: Packager: _PACKAGER on _BUILD_DATE
redmine:
EODESC
##}}}

# Install a doinst.sh, if it exists#{{{
if [ -r $CWD/doinst.sh ]; then
    cat $CWD/doinst.sh > $PKG/install/doinst.sh
fi
##}}}

# Let's remove the 1st & last / of the $RAILS_ROOT variable
RAILS_ROOT=$(echo $RAILS_ROOT | sed -e "s,^/,," -e "s,/$,,")

# add .new files to doinst.sh file
echo "config $RAILS_ROOT/$PRGNAM/config/database.yml.new" >> $PKG/install/doinst.sh
echo "config $RAILS_ROOT/$PRGNAM/config/email.yml.new" >> $PKG/install/doinst.sh
echo -e "\nrm -rf $RAILS_ROOT/tmp/cache/*" >> $PKG/install/doinst.sh

## Install the manpages#{{{
if [ -d $PKG/usr/man ]; then
    cd $PKG/usr/man ;
    find . -type f -exec gzip -9 {} \;
    for i in $( find . -type l ) ;do
        ln -s $( readlink $i ).gz $i.gz ; rm $i;
    done
fi
##}}}

# Install the documentation#{{{
cd $TMP/$PRGNAM-$VERSION
mkdir -p $PKG/$PREFIX/doc/$PRGNAM-$VERSION
for i in $DOCS ;
do 
    if [ -r $i ]; then
        install -m 644 $i $PKG/$PREFIX/doc/$PRGNAM-$VERSION
    fi
done
##}}}

mkdir -p  $PKG/$PREFIX/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/$PREFIX/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION
find $PKG/$PREFIX/doc -type f -exec chmod 0644 {} \;

# We change the default values in the slack-desc 
sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
${PKG}/install/slack-desc || true

cd $PKG 
process="Running makepkg"
introduce "$process"
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE

# Calculate the script time running !#{{{
time_end=$(date +%s)
elapsed_time_script=`expr $time_end - $time_start_script`
#Convert seconds to h:m:s format
_hms(){
    local S=${1}
    ((h=S/3600))
    ((m=S%3600/60))
    ((s=S%60))
    printf "%dh:%dm:%ds\n" $h $m $s
}
##}}}

conclude "The script has been running during $(_hms $elapsed_time_script)"
conclude "Done ..."

