Now the default configuration file is $HOME/.PMS.conf instead of PMS.conf 
--- a/net/pms/configuration/PmsConfiguration.java
+++ b/net/pms/configuration/PmsConfiguration.java
@@ -143,18 +143,20 @@
 	private static final String BUFFER_TYPE_FILE = "file";
 	
 	private static final int MAX_MAX_MEMORY_BUFFER_SIZE = 600;
 	
 	private static final String CONFIGURATION_FILENAME = "PMS.conf";
+	private static final String CONFIGURATION_PATH_LINUX = System.getProperty("user.home") + "/.";
 	private static final String CONFIGURATION_PATH_MAC = System.getProperty("user.home") + "/Library/Application Support/PS3 Media Server/";
 	private static final char LIST_SEPARATOR = ',';
 	private static final String KEY_FOLDERS = "folders";
 
 	private final PropertiesConfiguration configuration;
 	private final TempFolder tempFolder;
 	private final ProgramPathDisabler programPaths;
 	private String pmsConfPath = null;
+	private static String linuxPath = CONFIGURATION_PATH_LINUX + CONFIGURATION_FILENAME;
 
 	public PmsConfiguration() throws ConfigurationException, IOException {
 		configuration = new PropertiesConfiguration();
 		configuration.setListDelimiter((char)0);
 		String strAppData = System.getenv("APPDATA");
@@ -165,10 +167,12 @@
 
 		if (Platform.isWindows() && strAppData != null && (file = new File(strAppData + windowsPath)).exists()) {
 			path = strAppData + windowsPath;
 		} else if (Platform.isMac() && (file = new File(macPath)).exists()) {
 			path = macPath;
+		} else if (Platform.isLinux() && (file = new File(linuxPath)).exists()) {
+			path = linuxPath;
 		} else if ((file = new File(CONFIGURATION_FILENAME)).exists()) {
 			path = CONFIGURATION_FILENAME;
 		}
 
 		if (path != null) {
@@ -833,11 +837,15 @@
 				File pmsDir = new File(strAppData+PMSDIR);
 				if (!pmsDir.exists())
 					pmsDir.mkdir();
 				configuration.setFileName(strAppData+PMSDIR+CONFIGURATION_FILENAME);
 			}
-		} else {
+		}
+		else if (Platform.isLinux()) {
+			configuration.setFileName(getLinuxPath());
+		}
+		else {
 			configuration.setFileName(CONFIGURATION_FILENAME);
 		}
 		try {
 			configuration.save();
 		} catch (ConfigurationException ce) {
@@ -1158,6 +1166,14 @@
 	}
 
 	public void setPluginDirectory(String value) {
 		configuration.setProperty(KEY_PLUGIN_DIRECTORY, value);
 	}
+
+	public static String getLinuxPath() {
+		return linuxPath;
+	}
+
+	public static void setLinuxPath(String confPath) {
+		linuxPath = confPath;
+	}
 }
